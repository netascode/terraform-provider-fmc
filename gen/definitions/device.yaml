---
name: Device
rest_endpoint: /api/fmc_config/v1/domain/{DOMAIN_UUID}/devices/devicerecords
doc_category: Devices
test_tags: [FTD_ADDR]
attributes:
  - model_name: name
    type: String
    mandatory: true
    description: "User-specified name, must be unique. Example: 'Device 01 - 192.168.0.152'"
    example: device1
    minimum_test_value: '"device1min"'
  - model_name: hostName
    type: String
    description: Hostname or IP address of the device. Either the host_name or nat_id must be present.
    example: 10.0.0.1
    minimum_test_value: var.ftd_addr
    test_value: var.ftd_addr
  - model_name: natID
    tf_name: nat_id
    type: String
    description: (used for device registration behind NAT) If the device to be registered and the Firepower Management Center are separated by network address translation (NAT), set a unique string identifier.
    write_only: true
    exclude_example: true
    minimum_test_value: var.nat_id
    test_value: var.nat_id
  - model_name: license_caps
    tf_name: license_capabilities
    type: Set
    element_type: String
    mandatory: true
    description: "Array of strings representing the license capabilities on the managed device. For registering FTD, the allowed values are: BASE (mandatory), THREAT, URLFilter, MALWARE, APEX, PLUS, VPNOnly. For Firepower ASA or NGIPSv devices, allowed values are: BASE, THREAT, PROTECT, CONTROL, URLFilter, MALWARE, VPN, SSL."
    example: BASE
    minimum_test_value: '["THREAT", "URLFilter", "BASE", "MALWARE"]'
  - model_name: regKey
    tf_name: registration_key
    type: String
    mandatory: true
    description: Registration Key identical to the one previously configured on the device (`configure manager`).
    example: key1
    write_only: true
    test_value: var.registration_key
  - model_name: type
    type: String
    description: Type of the device; this value is always 'Device'.
    exclude_example: true
    requires_replace: true
    default_value: Device
    example: Device
  - tf_name: access_policy_id
    type: String
    mandatory: true
    model_name: id
    data_path:
      - accessPolicy
    write_only: true # actually is read-write, but (for reading) generated code hurts custom code
    description: The UUID of the assigned access control policy. For example `fmc_access_control_policy.example.id`.
    example: 76d24097-41c4-4558-a4d0-a8c07ac08470
    minimum_test_value: fmc_access_control_policy.minimum.id
    test_value: fmc_access_control_policy.test.id
  - model_name: dummy_nat_policy_id
    tf_name: nat_policy_id
    type: String
    write_only: true # actually is read-write, but (for reading) generated code hurts custom code
    description: The UUID of the assigned NAT policy.
    exclude_example: true
    test_value: "null"
    # test_value: fmc_ftd_nat_policy.test.id
  - model_name: prohibitPacketTransfer
    type: Bool
    description: Value true prohibits the device from sending packet data with events to the Firepower Management Center. Value false allows the transfer when a certain event is triggered. Not all traffic data is sent; connection events do not include a payload, only connection metadata.
    write_only: true # buggy in GET
    exclude_example: true
    test_value: "true"
  - model_name: performanceTier
    type: String
    description: Performance tier for the managed device, applicable only to vFTD devices >=6.8.0.
    write_only: true
    enum_values: [FTDv5, FTDv10, FTDv20, FTDv30, FTDv50, Legacy]
    example: FTDv50

test_prerequisites: |
  resource "fmc_access_control_policy" "minimum" {
    name = "POLICY1"
    default_action = "BLOCK"
  }

  resource "fmc_access_control_policy" "test" {
    name = "POLICY2"
    default_action = "PERMIT"
  }

  variable "ftd_addr" { default = null } // tests will set $TF_VAR_ftd_addr
  variable "nat_id"   { default = null } // tests will set $TF_VAR_nat_id
  variable "registration_key"         {} // tests will set $TF_VAR_registration_key
